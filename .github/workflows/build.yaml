name: CI/CD

on: push

jobs:
  build:
    name: Build and Push to Harbor
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Debug Harbor secrets (optional, remove later)
        run: |
          echo "HARBOR_HOST is: '${{ secrets.HARBOR_HOST }}'"
          echo "Length of HARBOR_CA_CERT is: $(echo "${{ secrets.HARBOR_CA_CERT }}" | wc -c)"

      - name: Install Harbor CA certificate
        run: |
          CERT_DIR="/etc/docker/certs.d/${{ secrets.HARBOR_HOST }}:8443"
          sudo mkdir -p "$CERT_DIR"
          echo "${{ secrets.HARBOR_CA_CERT }}" | sudo tee "$CERT_DIR/ca.crt"
          sudo systemctl restart docker

      - name: Login to Harbor
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.HARBOR_HOST }}:8443
          username: ${{ secrets.HARBOR_ADMIN_USERNAME }}
          password: ${{ secrets.HARBOR_ADMIN_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push image to Harbor
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.HARBOR_HOST }}:8443/library/student-app:latest

  scan:
    name: Scan Image for CVEs
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Docker Scout CVEs
        uses: docker/scout-action@v1.5.0
        with:
          command: cves
          image: ${{ secrets.HARBOR_HOST }}:8443/library/student-app:latest
          only-severities: critical,high
          ignore-base: false
          ignore-unchanged: false
          write-comment: true
          github-token: ${{ secrets.MY_GITHUB_TOKEN }}

  test:
    name: Test Image
    needs: [scan]
    runs-on: ubuntu-latest
    steps:
      - name: Run container from Harbor image
        run: |
          docker run -d -p 80:5000 ${{ secrets.HARBOR_HOST }}:8443/library/student-app:latest
          sleep 10
          curl -f http://localhost
          docker ps -aq | xargs docker stop | xargs docker rm

  deploy:
    name: Deploy to Kubernetes
    needs: [test]
    runs-on: self-hosted
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Apply Kubernetes manifests
        run: |
          sudo kubectl delete deployment --all
          sudo kubectl apply -f ${{ github.workspace }}/kubernetes/deployment.yaml --force
          sudo kubectl apply -f ${{ github.workspace }}/kubernetes/nginx-service.yaml --force

  postman:
    name: API Tests
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_KEY }}
      - name: Run API tests
        run: |
          postman collection run "${{ github.workspace }}/postman/collections/Integration Testing.json" --integration-id "181153-${{ github.run_id }}"
###